
!!PREFIX!!/%.cmi: %.mli
	$(!!VAR_PREFIX!!_CAMLC) $(!!VAR_PREFIX!!_COMPFLAGS) -o $@ -c $<

!!PREFIX!!/%.cmo: %.ml
	$(!!VAR_PREFIX!!_CAMLC) $(!!VAR_PREFIX!!_COMPFLAGS) -o $@ -c $<

!!PREFIX!!/%.cmx: %.ml
	$(!!VAR_PREFIX!!_CAMLOPT) $(!!VAR_PREFIX!!_COMPFLAGS) -o $@ -c $<


$(!!VAR_PREFIX!!_ALL) $(!!VAR_PREFIX!!_ALL:.cmo=.cmi): stdlib/!!STDLIB_PREFIX!!/stdlib.cma
$(!!VAR_PREFIX!!_ALL:.cmo=.cmx): stdlib/!!STDLIB_PREFIX!!/stdlib.cmxa

!!PREFIX!!/compilerlibs/ocamlcommon.cma: $(!!VAR_PREFIX!!_COMMON) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLC) -a -o $@ $(!!VAR_PREFIX!!_COMMON)

!!PREFIX!!/compilerlibs/ocamlcommon.cmxa: $(!!VAR_PREFIX!!_COMMON:.cmo=.cmx) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLOPT) -a -o $@ $(!!VAR_PREFIX!!_COMMON:.cmo=.cmx)


!!PREFIX!!/compilerlibs/ocamlbytecomp.cma: $(!!VAR_PREFIX!!_BYTECOMP) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLC) -a -o $@ $(!!VAR_PREFIX!!_BYTECOMP)

!!PREFIX!!/compilerlibs/ocamlbytecomp.cmxa: $(!!VAR_PREFIX!!_BYTECOMP:.cmo=.cmx) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLOPT) -a -o $@ $(!!VAR_PREFIX!!_BYTECOMP:.cmo=.cmx)


!!PREFIX!!/compilerlibs/ocamltoplevel.cma: $(!!VAR_PREFIX!!_TOPLEVEL) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLC) -a -o $@ $(!!VAR_PREFIX!!_TOPLEVEL)

!!PREFIX!!/compilerlibs/ocamltoplevel.cmxa: $(!!VAR_PREFIX!!_TOPLEVEL:.cmo=.cmx) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLOPT) -a -o $@ $(!!VAR_PREFIX!!_TOPLEVEL:.cmo=.cmx)


!!PREFIX!!/compilerlibs/ocamloptcomp.cma: $(!!VAR_PREFIX!!_ASMCOMP) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLC) -a -o $@ $(!!VAR_PREFIX!!_ASMCOMP)

!!PREFIX!!/compilerlibs/ocamloptcomp.cmxa: $(!!VAR_PREFIX!!_ASMCOMP:.cmo=.cmx) | !!PREFIX!!/compilerlibs
	$(!!VAR_PREFIX!!_CAMLOPT) -a -o $@ $(!!VAR_PREFIX!!_ASMCOMP:.cmo=.cmx)


!!PREFIX!!/ocamlc.opt: !!PREFIX!!/compilerlibs/ocamlcommon.cmxa \
	         !!PREFIX!!/compilerlibs/ocamlbytecomp.cmxa \
	         $(!!VAR_PREFIX!!_BYTESTART:.cmo=.cmx) stdlib/!!STDLIB_PREFIX!!/std_exit.cmx \
	         asmrun/libasmrun.a
	$(!!VAR_PREFIX!!_CAMLOPT) $(LINKFLAGS) -o $@ \
	   !!PREFIX!!/compilerlibs/ocamlcommon.cmxa \
	   !!PREFIX!!/compilerlibs/ocamlbytecomp.cmxa \
	   $(!!VAR_PREFIX!!_BYTESTART:.cmo=.cmx)

!!PREFIX!!/ocamlopt.opt: !!PREFIX!!/compilerlibs/ocamlcommon.cmxa \
	           !!PREFIX!!/compilerlibs/ocamloptcomp.cmxa \
	           $(!!VAR_PREFIX!!_OPTSTART:.cmo=.cmx) stdlib/!!STDLIB_PREFIX!!/std_exit.cmx \
	           asmrun/libasmrun.a
	$(!!VAR_PREFIX!!_CAMLOPT) $(LINKFLAGS) -o $@ \
	   !!PREFIX!!/compilerlibs/ocamlcommon.cmxa \
	   !!PREFIX!!/compilerlibs/ocamloptcomp.cmxa \
	   $(!!VAR_PREFIX!!_OPTSTART:.cmo=.cmx)

!!PREFIX!!/ocamlc: !!PREFIX!!/compilerlibs/ocamlcommon.cma \
	           !!PREFIX!!/compilerlibs/ocamlbytecomp.cma \
	           $(!!VAR_PREFIX!!_BYTESTART) stdlib/!!STDLIB_PREFIX!!/std_exit.cmo
	$(!!VAR_PREFIX!!_CAMLC) $(LINKFLAGS) -compat-32 -o $@ \
	   !!PREFIX!!/compilerlibs/ocamlcommon.cma \
	   !!PREFIX!!/compilerlibs/ocamlbytecomp.cma \
	   $(!!VAR_PREFIX!!_BYTESTART)

#FIXME: missing -compat-32
!!PREFIX!!/ocamlopt: !!PREFIX!!/compilerlibs/ocamlcommon.cma \
	             !!PREFIX!!/compilerlibs/ocamloptcomp.cma \
	             $(!!VAR_PREFIX!!_OPTSTART) stdlib/!!STDLIB_PREFIX!!/std_exit.cmo
	$(!!VAR_PREFIX!!_CAMLC) $(LINKFLAGS) -o $@ \
	   !!PREFIX!!/compilerlibs/ocamlcommon.cma \
	   !!PREFIX!!/compilerlibs/ocamloptcomp.cma \
	   $(!!VAR_PREFIX!!_OPTSTART)


stdlib/!!STDLIB_PREFIX!!/stdlib.cma: !!OCAMLC_DEP!!
	$(MAKE) -C stdlib !!STDLIB_PREFIX!!/stdlib.cma

# Depends on stdlib.cma because .cmi are build using ocamlc maybe add a
# stdlib/all_cmi target that would also allow allow more parallelism
stdlib/!!STDLIB_PREFIX!!/stdlib.cmxa: !!OCAMLOPT_DEP!! \
                                      stdlib/!!STDLIB_PREFIX!!/libasmrun.a \
                                      stdlib/!!STDLIB_PREFIX!!/stdlib.cma
	$(MAKE) -C stdlib !!STDLIB_PREFIX!!/stdlib.cmxa

stdlib/!!STDLIB_PREFIX!!/std_exit.cmo: !!OCAMLC_DEP!!
	$(MAKE) -C stdlib !!STDLIB_PREFIX!!/std_exit.cmo

stdlib/!!STDLIB_PREFIX!!/std_exit.cmx: !!OCAMLOPT_DEP!!
	$(MAKE) -C stdlib !!STDLIB_PREFIX!!/std_exit.cmx

stdlib/!!STDLIB_PREFIX!!/libasmrun.a: asmrun/libasmrun.a
	$(MAKE) -C stdlib !!STDLIB_PREFIX!!
	cp asmrun/libasmrun.a stdlib/!!STDLIB_PREFIX!!/libasmrun.a
